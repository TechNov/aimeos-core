sudo: true
dist: xenial
language: php

php:
  - 7.3

env:
  - DB=mssql
  - DB=pgsql

before_script:
  - if [[ $DB = 'mssql' ]]; then curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -; fi
  - if [[ $DB = 'mssql' ]]; then curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | sudo tee -a /etc/apt/sources.list; fi
  - if [[ $DB = 'mssql' ]]; then sudo apt-get update; fi
  - if [[ $DB = 'mssql' ]]; then sudo ACCEPT_EULA=Y apt-get install msodbcsql17 unixodbc-dev; fi
  - if [[ $DB = 'mssql' ]]; then pecl install sqlsrv; fi
  - if [[ $DB = 'mssql' ]]; then pecl install pdo_sqlsrv; fi
  - if [[ $DB = 'mssql' ]]; then travis_retry composer update; fi
  - if [[ $DB = 'mssql' ]]; then echo "CREATE DATABASE aimeos;" > sqlserver.sql; fi
  - if [[ $DB = 'mssql' ]]; then sudo docker run --name=mssql-server-linux-latest -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=S3c0r3P4ss' -p 1433:1433 -d microsoft/mssql-server-linux:2017-latest; fi
  - if [[ $DB = 'mssql' ]]; then sudo docker cp sqlserver.sql mssql-server-linux-latest:sqlserver.sql; fi
  - if [[ $DB = 'mssql' ]]; then sudo docker exec -it mssql-server-linux-latest /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U SA -P 'S3c0r3P4ss' -i sqlserver.sql; fi
  - if [[ $DB = 'mssql' ]]; then echo "<?php return array( 'db' => array( 'adapter' => 'sqlsrv', 'host' => '127.0.0.1', 'port' => 1433, 'database' => 'aimeos', 'username' => 'SA', 'password' => 'S3c0r3P4ss', 'limit' => 2, 'opt-persistent' => false, 'stmt' => array() ), 'fs' => array( 'adapter' => 'Standard', 'basedir' => '.' ), 'mq' => array( 'adapter' => 'Standard', 'db' => 'db' ) );" > config/resource.php; fi
  - if [[ $DB = 'mysql' ]]; then mysql -e "CREATE DATABASE aimeos; GRANT ALL ON aimeos.* TO 'aimeos'@'127.0.0.1' IDENTIFIED BY 'aimeos'"; fi
  - if [[ $DB = 'mysql' ]]; then echo "<?php return array( 'db' => array( 'adapter' => 'mysql', 'host' => '127.0.0.1', 'database' => 'aimeos', 'username' => 'aimeos', 'password' => 'aimeos', 'limit' => 2, 'opt-persistent' => false, 'stmt' => array( \"SET SESSIOn sort_buffer_size=2097144; SET NAMES 'utf8'; SET SESSION sql_mode='ANSI'\" ) ), 'fs' => array( 'adapter' => 'Standard', 'basedir' => '.' ), 'mq' => array( 'adapter' => 'Standard', 'db' => 'db' ) );" > config/resource.php; fi
  - if [[ $DB = 'pgsql' ]]; then psql -c "CREATE DATABASE aimeos;" -U postgres; fi
  - if [[ $DB = 'pgsql' ]]; then psql -c "CREATE USER aimeos PASSWORD 'aimeos';" -U postgres; fi
  - if [[ $DB = 'pgsql' ]]; then psql -c "GRANT ALL PRIVILEGES ON DATABASE aimeos TO aimeos;" -U postgres; fi
  - if [[ $DB = 'pgsql' ]]; then echo "<?php return array( 'db' => array( 'adapter' => 'pgsql', 'host' => '127.0.0.1', 'database' => 'aimeos', 'username' => 'aimeos', 'password' => 'aimeos', 'limit' => 2, 'opt-persistent' => false, 'stmt' => array() ), 'fs' => array( 'adapter' => 'Standard', 'basedir' => '.' ), 'mq' => array( 'adapter' => 'Standard', 'db' => 'db' ) );" > config/resource.php; fi

script: "vendor/bin/phing setup coverage check"
